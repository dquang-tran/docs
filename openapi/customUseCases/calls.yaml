paths:
  /:
    post:
      tags:
        - Custom Use Cases
      summary: Trigger outbound call
      description: Trigger outbound call
      operationId: customUseCasesCall
      security:
        - auth: []
      parameters:
        - name: agentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateCallRequest"
      responses:
        "200":
          $ref: "#/components/responses/CreateCallResponse"
        "400":
          description: Invalid request
          $ref: "../fleetworks.yaml#/components/responses/ErrorResponse"
        "401":
          description: Unauthorized or invalid API key
          $ref: "../fleetworks.yaml#/components/responses/ErrorResponse"

components:
  requestBodies:
    CreateCallRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - toPhone
            properties:
              toPhone:
                type: string
                description: Phone number in E.164 format (e.g. +1XXXXXXXXXX for US numbers). Must include country code with + prefix.
                example: "+15551234567"
              dynamicVariables:
                type: object
                description: Dynamic variables to be injected into the prompt.
                additionalProperties: true
                example:
                  loadId: "123456"
                  pickupLocation: "Chicago, IL"
                  deliveryLocation: "New York, NY"
                  rate: "2500"
          examples:
            Basic:
              value:
                toPhone: "+15551234567"
            WithVariables:
              value:
                toPhone: "+15551234567"
                dynamicVariables:
                  loadId: "123456"
                  pickupLocation: "Chicago, IL"
                  deliveryLocation: "New York, NY"
                  rate: "2500"

  responses:
    CreateCallResponse:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
          examples:
            Success:
              value:
                success: true
            Failure:
              value:
                success: false
