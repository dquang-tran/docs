{
  "openapi" : "3.0.3",
  "info" : {
    "description" : "This is the documents for FleetWorks.ai API specification",
    "title" : "FleetWorks.ai API Documentation",
    "version" : "1.0.0",
    "x-logo" : {
      "url" : "https://www.fleetworks.ai/logo.png"
    }
  },
  "servers" : [ {
    "url" : "https://api.fleetworks.ai"
  } ],
  "tags" : [ {
    "description" : "Ingest loads to FleetWorks system",
    "name" : "Ingestion"
  }, {
    "description" : "Export data from FleetWorks",
    "name" : "Data Exporting"
  } ],
  "paths" : {
    "/api/webhooks/loads/events" : {
      "post" : {
        "description" : "This endpoint receives load events for various integrations and ingest to FleetWorks system. The type of integration depends on organization settings.",
        "operationId" : "webhooksLoadsEvents",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WebhooksLoadsEventsRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Load Events Webhook",
        "tags" : [ "Ingestion" ]
      }
    },
    "/api/webhooks/carrier/events" : {
      "post" : {
        "description" : "FleetWorks can take into account the “standing” of a carrier with your brokerage. We can support different formatting and statuses. By default, we support the shape below. This shape can be adjusted to fit your specific needs.",
        "operationId" : "webhooksCarrierEvents",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/webhooksCarrierEventsRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Carrier Events Webhook",
        "tags" : [ "Ingestion" ]
      }
    },
    "/api/organizations/{orgId}/export/calls" : {
      "get" : {
        "description" : "Export call records for an organization within a specified time range. Optional filtering by load ID and MC number is supported.",
        "operationId" : "exportCalls",
        "parameters" : [ {
          "description" : "Organization ID to export calls for",
          "in" : "path",
          "name" : "orgId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Start time for call export in ISO8601 format",
          "in" : "query",
          "name" : "startTime",
          "required" : true,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "End time for call export in ISO8601 format",
          "in" : "query",
          "name" : "endTime",
          "required" : true,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "Optional load ID to filter calls",
          "in" : "query",
          "name" : "loadId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Optional MC number to filter calls",
          "in" : "query",
          "name" : "mcNumber",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Calls"
                }
              }
            },
            "description" : "Successful export"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Export Calls",
        "tags" : [ "Data Exporting" ]
      }
    },
    "/api/organizations/{orgId}/export/bids" : {
      "get" : {
        "description" : "Export bid records for an organization within a specified time range. Optional filtering by load ID and MC number is supported.",
        "operationId" : "exportBids",
        "parameters" : [ {
          "description" : "Organization ID to export bids for",
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Start time for bid export in ISO8601 format",
          "in" : "query",
          "name" : "startTime",
          "required" : true,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "End time for bid export in ISO8601 format",
          "in" : "query",
          "name" : "endTime",
          "required" : true,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "Optional load ID to filter bids",
          "in" : "query",
          "name" : "loadId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Optional MC number to filter bids",
          "in" : "query",
          "name" : "mcNumber",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bids"
                }
              }
            },
            "description" : "Successful export"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Export Bids",
        "tags" : [ "Data Exporting" ]
      }
    }
  },
  "components" : {
    "requestBodies" : {
      "WebhooksLoadsEventsRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/NativeLoadEvent"
            }
          }
        }
      },
      "webhooksCarrierEventsRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WebhooksCarrierEventsRequest"
            }
          }
        }
      }
    },
    "responses" : {
      "ErrorResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
            }
          }
        },
        "description" : "Error response"
      },
      "WebhooksLoadsEventsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
            }
          }
        },
        "description" : "Success"
      },
      "webhooksCarrierEventsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
            }
          }
        },
        "description" : "Success"
      }
    },
    "schemas" : {
      "Calls" : {
        "items" : {
          "$ref" : "#/components/schemas/Calls_inner"
        },
        "type" : "array"
      },
      "Bids" : {
        "items" : {
          "$ref" : "#/components/schemas/Bids_inner"
        },
        "type" : "array"
      },
      "NativeLoadEvent" : {
        "additionalProperties" : false,
        "description" : "The startRate, maxRate, and customerRate, and customerName are what we display in the UI. These help provide context when the broker is calling back a carrier to negotiate.",
        "example" : {
          "id" : "5678",
          "pickupTime" : "2025-04-08T22:00:00",
          "pickupEndTime" : "2025-04-08T23:00:00",
          "dropoffTime" : "2025-04-12T08:00:00",
          "dropoffEndTime" : "2025-04-12T12:00:00",
          "origin" : {
            "zip" : "12345",
            "city" : "NEW YORK",
            "state" : "NY",
            "country" : "US",
            "timezone" : "America/New_York"
          },
          "destination" : {
            "zip" : "67890",
            "city" : "LOS ANGELES",
            "state" : "CA",
            "country" : "US",
            "timezone" : "America/Los_Angeles"
          },
          "status" : "active",
          "customerName" : "Nike",
          "stops" : [ {
            "type" : "pickup",
            "address" : {
              "city" : "Buffalo",
              "state" : "NY",
              "country" : "US",
              "timezone" : "America/New_York",
              "zip" : "67890"
            },
            "windowStart" : "2024-04-10T07:15:00",
            "windowEnd" : null
          }, {
            "type" : "dropoff",
            "address" : {
              "city" : "Aurora",
              "state" : "CO",
              "country" : "US",
              "timezone" : "America/Denver",
              "zip" : "80010"
            },
            "windowStart" : "2024-04-11T17:45:00",
            "windowEnd" : null
          } ],
          "equipment" : "53ft Dry Van",
          "totalDistance" : 1120,
          "weight" : 42000,
          "commodity" : "Electronics",
          "customerRate" : 2000,
          "startRate" : 1500,
          "maxRate" : 2500,
          "bookNowRate" : 1500,
          "specialInstructions" : "Driver's assist required. Tracking required.",
          "teamServiceRequired" : true
        },
        "properties" : {
          "id" : {
            "description" : "A unique identifier for the load",
            "title" : "NativeLoadEvent.id",
            "type" : "string"
          },
          "pickupTime" : {
            "description" : "The local start time for the pickup in the ISO format",
            "title" : "NativeLoadEvent.pickupTime",
            "type" : "string"
          },
          "pickupEndTime" : {
            "description" : "The local end time for the pickup in the ISO format. Send this if pick up time is a window",
            "nullable" : true,
            "title" : "NativeLoadEvent.pickupEndTime",
            "type" : "string"
          },
          "dropoffTime" : {
            "description" : "The local start time for the dropoff in the ISO format",
            "title" : "NativeLoadEvent.dropoffTime",
            "type" : "string"
          },
          "dropoffEndTime" : {
            "description" : "The local end time for the dropoff in the ISO format. Send this if dropoff time is a window",
            "nullable" : true,
            "title" : "NativeLoadEvent.dropoffEndTime",
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Address"
          },
          "destination" : {
            "$ref" : "#/components/schemas/Address"
          },
          "status" : {
            "$ref" : "#/components/schemas/LoadStatus"
          },
          "customerName" : {
            "description" : "The name of the customer",
            "nullable" : true,
            "title" : "NativeLoadEvent.customerName",
            "type" : "string"
          },
          "stops" : {
            "description" : "An array of additional stops in between pick up and drop off, each with a type (\"pickup\" or \"dropoff\"), address, windowStart, and optional windowEnd",
            "items" : {
              "$ref" : "#/components/schemas/LoadStop"
            },
            "title" : "NativeLoadEvent.stops",
            "type" : "array"
          },
          "equipment" : {
            "description" : "The type of equipment required for the load",
            "nullable" : true,
            "title" : "NativeLoadEvent.equipment",
            "type" : "string"
          },
          "minTemperatureF" : {
            "description" : "The minimum temperature requirement for the load in Fahrenheit",
            "nullable" : true,
            "title" : "NativeLoadEvent.minTemperatureF",
            "type" : "number"
          },
          "maxTemperatureF" : {
            "description" : "The maximum temperature requirement for the load in Fahrenheit",
            "nullable" : true,
            "title" : "NativeLoadEvent.maxTemperatureF",
            "type" : "number"
          },
          "totalDistance" : {
            "description" : "The total distance of the load in miles",
            "nullable" : true,
            "title" : "NativeLoadEvent.totalDistance",
            "type" : "number"
          },
          "weight" : {
            "description" : "The weight of the load in pounds",
            "nullable" : true,
            "title" : "NativeLoadEvent.weight",
            "type" : "number"
          },
          "commodity" : {
            "description" : "The type of commodity being transported",
            "nullable" : true,
            "title" : "NativeLoadEvent.commodity",
            "type" : "string"
          },
          "teamServiceRequired" : {
            "description" : "A boolean indicating whether team service is required",
            "nullable" : true,
            "title" : "NativeLoadEvent.teamServiceRequired",
            "type" : "boolean"
          },
          "isHazmat" : {
            "description" : "Whether the load contains hazardous materials",
            "nullable" : true,
            "title" : "NativeLoadEvent.isHazmat",
            "type" : "boolean"
          },
          "customerRate" : {
            "description" : "The rate charged to the customer",
            "nullable" : true,
            "title" : "NativeLoadEvent.customerRate",
            "type" : "number"
          },
          "startRate" : {
            "description" : "The starting rate for the load",
            "nullable" : true,
            "title" : "NativeLoadEvent.startRate",
            "type" : "number"
          },
          "maxRate" : {
            "description" : "The maximum rate for the load for negotiation",
            "nullable" : true,
            "title" : "NativeLoadEvent.maxRate",
            "type" : "number"
          },
          "bookNowRate" : {
            "description" : "The rate for booking the load. This is the rate that the bot will relay to the carrier",
            "nullable" : true,
            "title" : "NativeLoadEvent.bookNowRate",
            "type" : "number"
          },
          "specialInstructions" : {
            "description" : "Any special instructions for the load",
            "nullable" : true,
            "title" : "NativeLoadEvent.specialInstructions",
            "type" : "string"
          },
          "shipmentContactNumber" : {
            "description" : "A string representing a phone number in E.164 format, i.e. \"+18008463400\". If extension is present, \"+15152733178;ext=3178\"",
            "nullable" : true,
            "title" : "NativeLoadEvent.shipmentContactNumber",
            "type" : "string"
          }
        },
        "required" : [ "destination", "dropoffTime", "id", "origin", "pickupTime", "status" ],
        "title" : "NativeLoadEvent",
        "type" : "object"
      },
      "Address" : {
        "additionalProperties" : false,
        "properties" : {
          "city" : {
            "description" : "City name",
            "title" : "Address.city",
            "type" : "string"
          },
          "state" : {
            "description" : "State code",
            "title" : "Address.state",
            "type" : "string"
          },
          "country" : {
            "description" : "Country code",
            "title" : "Address.country",
            "type" : "string"
          },
          "zip" : {
            "description" : "ZIP/Postal code",
            "title" : "Address.zip",
            "type" : "string"
          },
          "timezone" : {
            "description" : "Timezone identifier for the location",
            "title" : "Address.timezone",
            "type" : "string"
          }
        },
        "required" : [ "city", "country", "state", "timezone", "zip" ],
        "title" : "Address",
        "type" : "object"
      },
      "LoadStatus" : {
        "description" : "Represents the current status of the load",
        "enum" : [ "INACTIVE", "ACTIVE" ],
        "title" : "LoadStatus",
        "type" : "string"
      },
      "LoadStop" : {
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/StopType"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "windowStart" : {
            "description" : "The start time of the window for this stop",
            "title" : "LoadStop.windowStart",
            "type" : "string"
          },
          "windowEnd" : {
            "description" : "The end time of the window for this stop",
            "nullable" : true,
            "title" : "LoadStop.windowEnd",
            "type" : "string"
          }
        },
        "required" : [ "address", "type", "windowStart" ],
        "title" : "LoadStop",
        "type" : "object"
      },
      "StopType" : {
        "description" : "Indicates whether the stop is for pickup or dropoff",
        "enum" : [ "pickup", "dropoff" ],
        "title" : "StopType",
        "type" : "string"
      },
      "WebhooksCarrierEventsRequest" : {
        "properties" : {
          "dotNumber" : {
            "description" : "The Department of Transportation (DOT) number of the carrier",
            "type" : "string"
          },
          "status" : {
            "enum" : [ "ACTIVE", "INACTIVE" ],
            "type" : "string"
          },
          "complianceStatus" : {
            "enum" : [ "in_network", "do_not_use", "not_in_network" ],
            "type" : "string"
          },
          "mcNumber" : {
            "description" : "The Motor Carrier (MC) number of the carrier",
            "type" : "string"
          }
        },
        "required" : [ "complianceStatus", "dotNumber", "status" ],
        "type" : "object"
      },
      "webhooksLoadsEvents_200_response" : {
        "properties" : {
          "success" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "webhooksLoadsEvents_400_response" : {
        "properties" : {
          "error" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Calls_inner" : {
        "properties" : {
          "id" : {
            "description" : "The ID of the call",
            "type" : "integer"
          },
          "vocodeId" : {
            "description" : "The vocode ID of the call",
            "nullable" : true,
            "type" : "string"
          },
          "type" : {
            "description" : "The type of call",
            "enum" : [ "INBOUND", "OUTBOUND" ],
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the call",
            "enum" : [ "PENDING", "IN_PROGRESS", "COMPLETED", "FAILED", "CANCELED" ],
            "type" : "string"
          },
          "fromPhone" : {
            "description" : "The phone number the call came from",
            "type" : "string"
          },
          "toPhone" : {
            "description" : "The phone number the call was placed to",
            "type" : "string"
          },
          "transcript" : {
            "description" : "The transcript of the call",
            "nullable" : true,
            "type" : "object"
          },
          "recordingUrl" : {
            "description" : "The URL of the recording of the call",
            "nullable" : true,
            "type" : "string"
          },
          "conversationSeconds" : {
            "description" : "The number of seconds in the call",
            "format" : "float",
            "nullable" : true,
            "type" : "number"
          },
          "summary" : {
            "description" : "The summary of the call",
            "nullable" : true,
            "type" : "string"
          },
          "contentTags" : {
            "description" : "The tags of the call",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "callQualityTags" : {
            "description" : "The call quality tags of the call",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "providerType" : {
            "description" : "The type of provider the call came from",
            "nullable" : true,
            "type" : "string"
          },
          "sentimentScore" : {
            "description" : "Sentiment score of the call",
            "format" : "float",
            "nullable" : true,
            "type" : "number"
          },
          "callerName" : {
            "description" : "The name of the caller",
            "nullable" : true,
            "type" : "string"
          },
          "callerExt" : {
            "description" : "The extension of the caller",
            "nullable" : true,
            "type" : "string"
          },
          "forwardedTo" : {
            "description" : "The phone number the call was forwarded to",
            "nullable" : true,
            "type" : "string"
          },
          "reviewStatus" : {
            "description" : "The review status of the call",
            "enum" : [ "PENDING", "REVIEWED", "FLAGGED" ],
            "nullable" : true,
            "type" : "string"
          },
          "reviewerId" : {
            "description" : "The ID of the reviewer who reviewed the call",
            "nullable" : true,
            "type" : "integer"
          },
          "reviewedAt" : {
            "description" : "The date and time the call was reviewed",
            "format" : "date-time",
            "nullable" : true,
            "type" : "string"
          },
          "callQueueId" : {
            "description" : "The ID of the call queue the call was assigned to",
            "nullable" : true,
            "type" : "integer"
          },
          "agentId" : {
            "description" : "The ID of the agent who handled the call",
            "nullable" : true,
            "type" : "integer"
          },
          "createdAt" : {
            "description" : "The date and time the call was created",
            "format" : "date-time",
            "type" : "string"
          },
          "updatedAt" : {
            "description" : "The date and time the call was last updated",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Bids_inner" : {
        "properties" : {
          "id" : {
            "description" : "The unique identifier for the bid",
            "type" : "integer"
          },
          "conversationId" : {
            "description" : "The ID of the conversation this bid is associated with",
            "type" : "integer"
          },
          "loadId" : {
            "description" : "The internal ID of the load this bid is for",
            "type" : "integer"
          },
          "organizationId" : {
            "description" : "The ID of the organization making the bid",
            "type" : "integer"
          },
          "bidAmount" : {
            "description" : "The current bid amount",
            "format" : "decimal",
            "type" : "number"
          },
          "initialBid" : {
            "description" : "The initial bid amount if different from current bid",
            "format" : "decimal",
            "nullable" : true,
            "type" : "number"
          },
          "notes" : {
            "description" : "Optional notes associated with the bid",
            "nullable" : true,
            "type" : "string"
          },
          "createdAt" : {
            "description" : "The date and time the bid was created",
            "format" : "date-time",
            "type" : "string"
          },
          "updatedAt" : {
            "description" : "The date and time the bid was last updated",
            "format" : "date-time",
            "type" : "string"
          },
          "deletedAt" : {
            "description" : "The date and time the bid was soft deleted, if applicable",
            "format" : "date-time",
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "auth" : {
        "description" : "An authentication token that identifies the organization associated with the event. You can reach out to FleetWorks team to request for a token.",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}