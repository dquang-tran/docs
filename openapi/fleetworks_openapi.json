{
  "openapi" : "3.0.3",
  "info" : {
    "description" : "This is the documents for FleetWorks.ai API specification",
    "title" : "FleetWorks.ai API Documentation",
    "version" : "1.0.0",
    "x-logo" : {
      "url" : "https://www.fleetworks.ai/logo.png"
    }
  },
  "servers" : [ {
    "url" : "https://api.fleetworks.ai"
  } ],
  "tags" : [ {
    "description" : "Ingest loads to FleetWorks system",
    "name" : "Ingestion"
  }, {
    "description" : "Endpoints for calls",
    "name" : "Calls"
  }, {
    "description" : "Endpoints for bids",
    "name" : "Bids"
  }, {
    "description" : "Endpoints for carriers",
    "name" : "Carriers"
  }, {
    "description" : "Custom AI agent use case",
    "name" : "Custom Use Cases"
  }, {
    "description" : "Analytics endpoints",
    "name" : "Analytics"
  } ],
  "paths" : {
    "/api/v1/webhooks/loads/events" : {
      "post" : {
        "description" : "This endpoint receives load events for various integrations and ingest to FleetWorks system. The type of integration depends on organization settings.",
        "operationId" : "webhooksLoadsEvents",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WebhooksLoadsEventsRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Load events webhook",
        "tags" : [ "Ingestion" ]
      }
    },
    "/api/v1/webhooks/carrier/events" : {
      "post" : {
        "description" : "FleetWorks can take into account the “standing” of a carrier with your brokerage. We can support different formatting and statuses. By default, we support the shape below. This shape can be adjusted to fit your specific needs.",
        "operationId" : "webhooksCarrierEvents",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/webhooksCarrierEventsRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Carrier events webhook",
        "tags" : [ "Ingestion" ]
      }
    },
    "/api/v1/calls" : {
      "get" : {
        "description" : "List call records for within a specified time range. Optional filtering by load ID and MC number is supported.",
        "operationId" : "listCalls",
        "parameters" : [ {
          "description" : "Start time for calls list in ISO8601 format",
          "in" : "query",
          "name" : "startTime",
          "required" : true,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "End time for calls list in ISO8601 format",
          "in" : "query",
          "name" : "endTime",
          "required" : true,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Optional load ID to filter calls",
          "in" : "query",
          "name" : "loadId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Optional MC number to filter calls",
          "in" : "query",
          "name" : "mcNumber",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Pagination offset",
          "in" : "query",
          "name" : "offset",
          "required" : false,
          "schema" : {
            "default" : 0,
            "minimum" : 0,
            "type" : "number"
          }
        }, {
          "description" : "Pagination limit",
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "default" : 100,
            "maximum" : 500,
            "minimum" : 1,
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/listCalls_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "List calls",
        "tags" : [ "Calls" ]
      }
    },
    "/api/v1/calls/caller/{phoneNumber}": {
      "get": {
        "description": "Fetch latest call for a specified caller ID",
        "operationId": "getCallByPhoneNumber",
        "parameters": [
          {
            "description": "Phone number in E.164 format. For example: +18008463400 or +15152733178",
            "in": "path",
            "name": "phoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCallByPhoneNumber_200_response"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description": "Error response, or incorrect phone number format"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description": "Error response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description": "Error response"
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Fetch latest call by caller ID",
        "tags": ["Calls"]
      }
    },
    "/api/v1/bids" : {
      "get" : {
        "description" : "List bid records for an organization within a specified time range. Optional filtering by load ID and MC number is supported.",
        "operationId" : "listBids",
        "parameters" : [ {
          "description" : "Start time for bids list in ISO8601 format",
          "in" : "query",
          "name" : "startTime",
          "required" : true,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "End time for bids list in ISO8601 format",
          "in" : "query",
          "name" : "endTime",
          "required" : true,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Optional load ID to filter bids",
          "in" : "query",
          "name" : "loadId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Optional MC number to filter bids",
          "in" : "query",
          "name" : "mcNumber",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Pagination offset",
          "in" : "query",
          "name" : "offset",
          "required" : false,
          "schema" : {
            "default" : 0,
            "minimum" : 0,
            "type" : "number"
          }
        }, {
          "description" : "Pagination limit",
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "default" : 100,
            "maximum" : 500,
            "minimum" : 1,
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/listBids_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "List bids",
        "tags" : [ "Bids" ]
      }
    },
    "/api/v1/carriers" : {
      "get" : {
        "description" : "Retrieve carrier records that have operated in a specified lane with optional filtering by radius and equipment types",
        "operationId" : "getCarriersByLane",
        "parameters" : [ {
          "description" : "Origin location for the lane (city, state format)",
          "in" : "query",
          "name" : "origin",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Destination location for the lane (city, state format)",
          "in" : "query",
          "name" : "destination",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Search radius in miles around origin and destination points",
          "in" : "query",
          "name" : "radius",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "number"
          }
        }, {
          "description" : "Comma-separated list of equipment types to filter by",
          "in" : "query",
          "name" : "equipmentTypes",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/getCarriersByLane_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Unauthorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Get carriers by lane",
        "tags" : [ "Carriers" ]
      }
    },
    "/api/v1/custom-use-cases/{agentId}/create-phone-call" : {
      "post" : {
        "description" : "Trigger an outbound call. When finished, the results will be sent to your server URL. Agent ID can be found in the UI when creating or editing a custom use case under \"API trigger\". Read more about [how it works](/custom-use-cases).",
        "operationId" : "customUseCasesCall",
        "parameters" : [ {
          "in" : "path",
          "name" : "agentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCallRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "Success" : {
                    "value" : {
                      "success" : true
                    }
                  },
                  "Failure" : {
                    "value" : {
                      "success" : false
                    }
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/customUseCasesCall_200_response"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Trigger outbound call",
        "tags" : [ "Custom Use Cases" ]
      }
    },
    "/api/v1/analytics" : {
      "get" : {
        "description" : "Provides detailed analytics and insights based on FleetWorks data.",
        "operationId" : "getAnalytics",
        "parameters" : [ {
          "description" : "Start date for analytics data.",
          "in" : "query",
          "name" : "startDate",
          "required" : true,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "End date for analytics data.",
          "in" : "query",
          "name" : "endDate",
          "required" : true,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Specific metric to retrieve.",
          "in" : "query",
          "name" : "metric",
          "required" : false,
          "schema" : {
            "enum" : [ "average_rate", "avg_call_duration", "total_bids", "call_volume", "loads_touched", "loads_booked" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsResponse_1"
                }
              }
            },
            "description" : "Successful retrieval of analytics data."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Retrieve Analytics Data",
        "tags" : [ "Analytics" ]
      }
    },
    "/api/v1/price-data" : {
      "get" : {
        "description" : "Fetches comprehensive price data based on specified filters.",
        "operationId" : "getPriceDataWithAnalytics",
        "parameters" : [ {
          "description" : "Start date for the analytics period.",
          "in" : "query",
          "name" : "start_date",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "End date for the analytics period.",
          "in" : "query",
          "name" : "end_date",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Filter price data by specific date.",
          "in" : "query",
          "name" : "date",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Origin location to filter price data.",
          "in" : "query",
          "name" : "origin",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Destination location to filter price data.",
          "in" : "query",
          "name" : "destination",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Pagination offset",
          "in" : "query",
          "name" : "offset",
          "required" : false,
          "schema" : {
            "default" : 0,
            "minimum" : 0,
            "type" : "number"
          }
        }, {
          "description" : "Number of records to return per page",
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "default" : 20,
            "maximum" : 100,
            "minimum" : 1,
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PriceDataResponse_1"
                }
              }
            },
            "description" : "Successful retrieval of price data with analytics."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
                }
              }
            },
            "description" : "Error response"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ],
        "summary" : "Retrieve Price Data",
        "tags" : [ "Price Data", "Pricing Analytics" ]
      }
    }
  },
  "components" : {
    "requestBodies" : {
      "WebhooksLoadsEventsRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/NativeLoadEvent"
            }
          }
        }
      },
      "webhooksCarrierEventsRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WebhooksCarrierEventsRequest"
            }
          }
        }
      },
      "CreateCallRequest" : {
        "content" : {
          "application/json" : {
            "examples" : {
              "Basic" : {
                "value" : {
                  "toPhone" : "+15551234567"
                }
              },
              "WithVariables" : {
                "value" : {
                  "toPhone" : "+15551234567",
                  "dynamicVariables" : {
                    "loadId" : "123456",
                    "pickupLocation" : "Chicago, IL",
                    "deliveryLocation" : "New York, NY",
                    "rate" : "2500"
                  }
                }
              }
            },
            "schema" : {
              "$ref" : "#/components/schemas/customUseCasesCall_request"
            }
          }
        }
      }
    },
    "responses" : {
      "ErrorResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/webhooksLoadsEvents_400_response"
            }
          }
        },
        "description" : "Error response"
      },
      "WebhooksLoadsEventsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
            }
          }
        },
        "description" : "Success"
      },
      "webhooksCarrierEventsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/webhooksLoadsEvents_200_response"
            }
          }
        },
        "description" : "Success"
      },
      "CreateCallResponse" : {
        "content" : {
          "application/json" : {
            "examples" : {
              "Success" : {
                "value" : {
                  "success" : true
                }
              },
              "Failure" : {
                "value" : {
                  "success" : false
                }
              }
            },
            "schema" : {
              "$ref" : "#/components/schemas/customUseCasesCall_200_response"
            }
          }
        },
        "description" : "Success"
      }
    },
    "schemas" : {
      "PaginationResponse" : {
        "description" : "Pagination response",
        "properties" : {
          "limit" : {
            "type" : "number"
          },
          "offset" : {
            "type" : "number"
          },
          "total" : {
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "AnalyticsResponse" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AnalyticsResponse_data_inner"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginationResponse"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PriceDataResponse" : {
        "properties" : {
          "marketAnalytics" : {
            "$ref" : "#/components/schemas/MarketPriceMetrics"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginationResponse"
          }
        },
        "required" : [ "loads", "marketAnalytics", "pagination" ],
        "type" : "object"
      },
      "LoadPriceEntry" : {
        "properties" : {
          "loadId" : {
            "description" : "Unique identifier for the load",
            "type" : "string"
          },
          "origin" : {
            "description" : "Origin location of the load",
            "type" : "string"
          },
          "destination" : {
            "description" : "Destination location of the load",
            "type" : "string"
          },
          "equipmentType" : {
            "description" : "Type of equipment required",
            "type" : "string"
          },
          "miles" : {
            "description" : "Total miles for the load",
            "type" : "number"
          },
          "postedRate" : {
            "description" : "Rate posted by the broker",
            "type" : "number"
          },
          "ratePerMile" : {
            "description" : "Rate per mile calculation",
            "type" : "number"
          },
          "postDate" : {
            "description" : "Date and time the load was posted",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "destination", "equipmentType", "loadId", "miles", "origin", "postDate", "postedRate", "ratePerMile" ],
        "type" : "object"
      },
      "MarketPriceMetrics" : {
        "properties" : {
          "laneAverageRate" : {
            "description" : "Average rate for loads in this lane",
            "type" : "number"
          },
          "marketAverageRate" : {
            "description" : "Average rate across all lanes in the market",
            "type" : "number"
          },
          "ratePerMileTrend" : {
            "description" : "Trend in rate per mile over the selected period",
            "type" : "number"
          },
          "volumeTrend" : {
            "description" : "Trend in load volume over the selected period",
            "type" : "number"
          },
          "dayRangeSpread" : {
            "description" : "Spread between highest and lowest rates in the period",
            "type" : "number"
          }
        },
        "required" : [ "dayRangeSpread", "laneAverageRate", "marketAverageRate", "ratePerMileTrend", "volumeTrend" ],
        "type" : "object"
      },
      "LatestCallerInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the call"
          },
          "type": {
            "type": "string",
            "enum": [
              "CARRIER_SALE",
              "CARRIER_SALE_INBOUND",
              "OTHER",
              "UNKNOWN",
              "OUTBOUND"
            ],
            "description": "The type of the call"
          },
          "status": {
            "type": "string",
            "enum": ["COMPLETED", "IN_PROGRESS", "ANSWERED"],
            "description": "The status of the call"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the call"
          },
          "summary": {
            "type": "string",
            "nullable": true,
            "description": "An optional summary of the call. May be null if the call is IN_PROGRESS or processing has not completed yet."
          },
          "bids": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "loadId": {
                  "type": "string",
                  "description": "The load ID associated with the bid"
                },
                "id": {
                  "type": "integer",
                  "description": "The ID of the bid"
                },
                "bidAmount": {
                  "type": "string",
                  "description": "The amount of the bid"
                },
                "initialBid": {
                  "type": "string",
                  "nullable": true,
                  "description": "The initial bid amount, if any"
                }
              }
            }
          },
          "carrier": {
            "type": "object",
            "properties": {
              "highwayConnectionStatus": {
                "type": "string",
                "enum": [
                  "ONBOARDED",
                  "NEEDS_TO_ONBOARD",
                  "NEEDS_TO_ONBOARD_BUT_CAN_REMAIN_ACTIVE",
                  "DO_NOT_DISPATCH",
                  "NOT_ONBOARDED"
                ],
                "description": "The Highway connection status of the carrier"
              },
              "rulesAssessment": {
                "type": "string",
                "enum": [
                  "PASS",
                  "PARTIAL_PASS",
                  "INCOMPLETE",
                  "FAIL",
                  "NOT_AVAILABLE"
                ],
                "description": "The assessment of the carrier's rules"
              },
              "actionToImprove": {
                "type": "string",
                "description": "The actions to improve the carrier's rules result"
              },
              "mcNumber": {
                "type": "string",
                "description": "The MC number of the carrier"
              },
              "dotNumber": {
                "type": "number",
                "description": "The DOT number of the carrier"
              }
            }
          }
        }
      },
      "CallForExport" : {
        "properties" : {
          "id" : {
            "description" : "The ID of the call",
            "type" : "integer"
          },
          "vocodeId" : {
            "description" : "The vocode ID of the call",
            "nullable" : true,
            "type" : "string"
          },
          "fromPhone" : {
            "description" : "The phone number the call came from",
            "type" : "string"
          },
          "toPhone" : {
            "description" : "The phone number the call was placed to",
            "type" : "string"
          },
          "summary" : {
            "description" : "The summary of the call",
            "nullable" : true,
            "type" : "string"
          },
          "createdAt" : {
            "description" : "The date and time the call was created",
            "format" : "date-time",
            "type" : "string"
          },
          "loadId" : {
            "description" : "The load ID linked to the call",
            "type" : "string"
          },
          "mcNumber" : {
            "description" : "The carrier mcNumber",
            "type" : "string"
          },
          "recordingUrl" : {
            "description" : "The URL of the recording of the call",
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SalesBidForExport" : {
        "properties" : {
          "loadId" : {
            "description" : "The internal ID of the load this bid is for",
            "type" : "integer"
          },
          "originLocation" : {
            "description" : "The origin location for the load.",
            "type" : "string"
          },
          "destinationLocation" : {
            "description" : "The destination location for the load.",
            "type" : "string"
          },
          "carrierMc" : {
            "description" : "Motor Carrier (MC) number for the carrier.",
            "type" : "string"
          },
          "carrierDot" : {
            "description" : "Department of Transportation (DOT) number for the carrier.",
            "type" : "string"
          },
          "phoneNumber" : {
            "description" : "Contact phone number for the carrier.",
            "type" : "string"
          },
          "extension" : {
            "description" : "Phone extension, if applicable.",
            "type" : "string"
          },
          "callerName" : {
            "description" : "Name of the individual making the call.",
            "type" : "string"
          },
          "callSummary" : {
            "description" : "Summary of the call details.",
            "type" : "string"
          },
          "callDateTime" : {
            "description" : "Date and time when the call occurred.",
            "format" : "date-time",
            "type" : "string"
          }
        }
      },
      "Carrier" : {
        "properties" : {
          "mcNumber" : {
            "description" : "Motor Carrier (MC) number",
            "example" : "123456",
            "type" : "string"
          },
          "dotNumber" : {
            "description" : "Department of Transportation (DOT) number",
            "example" : 1234,
            "type" : "number"
          },
          "name" : {
            "description" : "Carrier company name",
            "example" : "FleetWorks Trucking",
            "type" : "string"
          },
          "address" : {
            "description" : "Carrier's business address",
            "example" : "123 1st St, New York, NY",
            "type" : "string"
          },
          "fleetsize" : {
            "description" : "Number of trucks in carrier's fleet",
            "example" : 3,
            "type" : "number"
          },
          "avgRate" : {
            "description" : "Average rate for the carrier",
            "example" : "1234",
            "type" : "string"
          },
          "lanes" : {
            "items" : {
              "$ref" : "#/components/schemas/Carrier_lanes_inner"
            },
            "type" : "array"
          },
          "ruleAssessment" : {
            "enum" : [ "pass", "partial_pass", "incomplete", "fail" ],
            "example" : "pass",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PaginationResponse_1" : {
        "properties" : {
          "total" : {
            "description" : "Total number of records",
            "example" : 1,
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "ErrorResponse" : {
        "properties" : {
          "error" : {
            "description" : "Error message",
            "type" : "string"
          },
          "code" : {
            "description" : "Error code",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AnalyticsResponse_1" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AnalyticsResponse_data_inner"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginationResponse"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PriceDataResponse_1" : {
        "properties" : {
          "marketAnalytics" : {
            "$ref" : "#/components/schemas/MarketPriceMetrics"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginationResponse"
          }
        },
        "required" : [ "loads", "marketAnalytics", "pagination" ],
        "type" : "object"
      },
      "NativeLoadEvent" : {
        "additionalProperties" : false,
        "description" : "The startRate, maxRate, and customerRate, and customerName are what we display in the UI. These help provide context when the broker is calling back a carrier to negotiate.",
        "example" : {
          "id" : "5678",
          "pickupTime" : "2025-04-08T22:00:00",
          "pickupEndTime" : "2025-04-08T23:00:00",
          "dropoffTime" : "2025-04-12T08:00:00",
          "dropoffEndTime" : "2025-04-12T12:00:00",
          "origin" : {
            "zip" : "12345",
            "city" : "NEW YORK",
            "state" : "NY",
            "country" : "US",
            "timezone" : "America/New_York"
          },
          "destination" : {
            "zip" : "67890",
            "city" : "LOS ANGELES",
            "state" : "CA",
            "country" : "US",
            "timezone" : "America/Los_Angeles"
          },
          "status" : "active",
          "customerName" : "Nike",
          "stops" : [ {
            "type" : "pickup",
            "address" : {
              "city" : "Buffalo",
              "state" : "NY",
              "country" : "US",
              "timezone" : "America/New_York",
              "zip" : "67890"
            },
            "windowStart" : "2024-04-10T07:15:00",
            "windowEnd" : null
          }, {
            "type" : "dropoff",
            "address" : {
              "city" : "Aurora",
              "state" : "CO",
              "country" : "US",
              "timezone" : "America/Denver",
              "zip" : "80010"
            },
            "windowStart" : "2024-04-11T17:45:00",
            "windowEnd" : null
          } ],
          "equipment" : "53ft Dry Van",
          "totalDistance" : 1120,
          "weight" : 42000,
          "commodity" : "Electronics",
          "customerRate" : 2000,
          "startRate" : 1500,
          "maxRate" : 2500,
          "bookNowRate" : 1500,
          "specialInstructions" : "Driver's assist required. Tracking required.",
          "teamServiceRequired" : true
        },
        "properties" : {
          "id" : {
            "description" : "A unique identifier for the load",
            "title" : "NativeLoadEvent.id",
            "type" : "string"
          },
          "pickupTime" : {
            "description" : "The local start time for the pickup in the ISO format",
            "title" : "NativeLoadEvent.pickupTime",
            "type" : "string"
          },
          "pickupEndTime" : {
            "description" : "The local end time for the pickup in the ISO format. Send this if pick up time is a window",
            "nullable" : true,
            "title" : "NativeLoadEvent.pickupEndTime",
            "type" : "string"
          },
          "dropoffTime" : {
            "description" : "The local start time for the dropoff in the ISO format",
            "title" : "NativeLoadEvent.dropoffTime",
            "type" : "string"
          },
          "dropoffEndTime" : {
            "description" : "The local end time for the dropoff in the ISO format. Send this if dropoff time is a window",
            "nullable" : true,
            "title" : "NativeLoadEvent.dropoffEndTime",
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Address"
          },
          "destination" : {
            "$ref" : "#/components/schemas/Address"
          },
          "status" : {
            "$ref" : "#/components/schemas/LoadStatus"
          },
          "customerName" : {
            "description" : "The name of the customer",
            "nullable" : true,
            "title" : "NativeLoadEvent.customerName",
            "type" : "string"
          },
          "stops" : {
            "description" : "An array of additional stops in between pick up and drop off, each with a type (\"pickup\" or \"dropoff\"), address, windowStart, and optional windowEnd",
            "items" : {
              "$ref" : "#/components/schemas/LoadStop"
            },
            "title" : "NativeLoadEvent.stops",
            "type" : "array"
          },
          "equipment" : {
            "description" : "The type of equipment required for the load",
            "nullable" : true,
            "title" : "NativeLoadEvent.equipment",
            "type" : "string"
          },
          "minTemperatureF" : {
            "description" : "The minimum temperature requirement for the load in Fahrenheit",
            "nullable" : true,
            "title" : "NativeLoadEvent.minTemperatureF",
            "type" : "number"
          },
          "maxTemperatureF" : {
            "description" : "The maximum temperature requirement for the load in Fahrenheit",
            "nullable" : true,
            "title" : "NativeLoadEvent.maxTemperatureF",
            "type" : "number"
          },
          "totalDistance" : {
            "description" : "The total distance of the load in miles",
            "nullable" : true,
            "title" : "NativeLoadEvent.totalDistance",
            "type" : "number"
          },
          "weight" : {
            "description" : "The weight of the load in pounds",
            "nullable" : true,
            "title" : "NativeLoadEvent.weight",
            "type" : "number"
          },
          "commodity" : {
            "description" : "The type of commodity being transported",
            "nullable" : true,
            "title" : "NativeLoadEvent.commodity",
            "type" : "string"
          },
          "teamServiceRequired" : {
            "description" : "A boolean indicating whether team service is required",
            "nullable" : true,
            "title" : "NativeLoadEvent.teamServiceRequired",
            "type" : "boolean"
          },
          "isHazmat" : {
            "description" : "Whether the load contains hazardous materials",
            "nullable" : true,
            "title" : "NativeLoadEvent.isHazmat",
            "type" : "boolean"
          },
          "customerRate" : {
            "description" : "The rate charged to the customer",
            "nullable" : true,
            "title" : "NativeLoadEvent.customerRate",
            "type" : "number"
          },
          "startRate" : {
            "description" : "The starting rate for the load",
            "nullable" : true,
            "title" : "NativeLoadEvent.startRate",
            "type" : "number"
          },
          "maxRate" : {
            "description" : "The maximum rate for the load for negotiation",
            "nullable" : true,
            "title" : "NativeLoadEvent.maxRate",
            "type" : "number"
          },
          "bookNowRate" : {
            "description" : "The rate for booking the load. This is the rate that the bot will relay to the carrier",
            "nullable" : true,
            "title" : "NativeLoadEvent.bookNowRate",
            "type" : "number"
          },
          "specialInstructions" : {
            "description" : "Any special instructions for the load",
            "nullable" : true,
            "title" : "NativeLoadEvent.specialInstructions",
            "type" : "string"
          },
          "shipmentContactNumber" : {
            "description" : "A string representing a phone number in E.164 format, i.e. \"+18008463400\". If extension is present, \"+15152733178;ext=3178\"",
            "nullable" : true,
            "title" : "NativeLoadEvent.shipmentContactNumber",
            "type" : "string"
          },
          "bookingUrl" : {
            "description" : "The URL to send to the carrier to book the load, if booking is done through a web portal",
            "nullable" : true,
            "title" : "NativeLoadEvent.bookingUrl",
            "type" : "string"
          },
          "assignedCarrierMc" : {
            "description" : "The MC number of the carrier assigned to this load",
            "nullable" : true,
            "title" : "NativeLoadEvent.assignedCarrierMc",
            "type" : "string"
          },
          "assignedCarrierDot" : {
            "description" : "The DOT number of the carrier assigned to this load",
            "nullable" : true,
            "title" : "NativeLoadEvent.assignedCarrierDot",
            "type" : "string"
          },
          "bookedRate" : {
            "description" : "The final rate that was agreed upon with the carrier",
            "nullable" : true,
            "title" : "NativeLoadEvent.bookedRate",
            "type" : "number"
          }
        },
        "required" : [ "destination", "dropoffTime", "id", "origin", "pickupTime", "status" ],
        "title" : "NativeLoadEvent",
        "type" : "object"
      },
      "Address" : {
        "additionalProperties" : false,
        "properties" : {
          "city" : {
            "description" : "City name",
            "title" : "Address.city",
            "type" : "string"
          },
          "state" : {
            "description" : "State code",
            "title" : "Address.state",
            "type" : "string"
          },
          "country" : {
            "description" : "Country code",
            "title" : "Address.country",
            "type" : "string"
          },
          "zip" : {
            "description" : "ZIP/Postal code",
            "title" : "Address.zip",
            "type" : "string"
          },
          "timezone" : {
            "description" : "Timezone identifier for the location",
            "title" : "Address.timezone",
            "type" : "string"
          }
        },
        "required" : [ "city", "country", "state", "timezone", "zip" ],
        "title" : "Address",
        "type" : "object"
      },
      "LoadStatus" : {
        "description" : "Represents the current status of the load",
        "enum" : [ "INACTIVE", "ACTIVE" ],
        "title" : "LoadStatus",
        "type" : "string"
      },
      "LoadStop" : {
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/StopType"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "windowStart" : {
            "description" : "The start time of the window for this stop",
            "title" : "LoadStop.windowStart",
            "type" : "string"
          },
          "windowEnd" : {
            "description" : "The end time of the window for this stop",
            "nullable" : true,
            "title" : "LoadStop.windowEnd",
            "type" : "string"
          }
        },
        "required" : [ "address", "type", "windowStart" ],
        "title" : "LoadStop",
        "type" : "object"
      },
      "StopType" : {
        "description" : "Indicates whether the stop is for pickup or dropoff",
        "enum" : [ "pickup", "dropoff" ],
        "title" : "StopType",
        "type" : "string"
      },
      "WebhooksCarrierEventsRequest" : {
        "properties" : {
          "dotNumber" : {
            "description" : "The Department of Transportation (DOT) number of the carrier",
            "type" : "string"
          },
          "status" : {
            "enum" : [ "ACTIVE", "INACTIVE" ],
            "type" : "string"
          },
          "complianceStatus" : {
            "enum" : [ "in_network", "do_not_use", "not_in_network" ],
            "type" : "string"
          },
          "mcNumber" : {
            "description" : "The Motor Carrier (MC) number of the carrier",
            "type" : "string"
          }
        },
        "required" : [ "complianceStatus", "dotNumber", "status" ],
        "type" : "object"
      },
      "webhooksLoadsEvents_200_response" : {
        "properties" : {
          "success" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "webhooksLoadsEvents_400_response" : {
        "properties" : {
          "error" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "listCalls_200_response" : {
        "properties" : {
          "calls" : {
            "items" : {
              "$ref" : "#/components/schemas/CallForExport"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginationResponse"
          }
        },
        "type" : "object"
      },
      "getCallByPhoneNumber_200_response" : {
        "allOf": [
          {
            "$ref" : "#/components/schemas/LatestCallerInfo"
          }
        ]
      },
      "listBids_200_response" : {
        "properties" : {
          "salesBids" : {
            "items" : {
              "$ref" : "#/components/schemas/SalesBidForExport"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginationResponse"
          }
        },
        "type" : "object"
      },
      "getCarriersByLane_200_response" : {
        "properties" : {
          "carriers" : {
            "items" : {
              "$ref" : "#/components/schemas/Carrier"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginationResponse_1"
          }
        },
        "type" : "object"
      },
      "customUseCasesCall_request" : {
        "properties" : {
          "toPhone" : {
            "description" : "Phone number in E.164 format (e.g. +1XXXXXXXXXX for US numbers). Must include country code with + prefix.",
            "example" : "+15551234567",
            "type" : "string"
          },
          "dynamicVariables" : {
            "additionalProperties" : true,
            "description" : "Dynamic variables to be injected into the prompt.",
            "example" : {
              "loadId" : "123456",
              "pickupLocation" : "Chicago, IL",
              "deliveryLocation" : "New York, NY",
              "rate" : "2500"
            },
            "type" : "object"
          }
        },
        "required" : [ "toPhone" ],
        "type" : "object"
      },
      "customUseCasesCall_200_response" : {
        "properties" : {
          "success" : {
            "example" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "AnalyticsResponse_data_inner_metrics" : {
        "properties" : {
          "totalCalls" : {
            "type" : "number"
          },
          "successfulCalls" : {
            "type" : "number"
          },
          "averageCallDuration" : {
            "type" : "number"
          },
          "totalBids" : {
            "type" : "number"
          },
          "acceptedBids" : {
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "AnalyticsResponse_data_inner" : {
        "properties" : {
          "date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "metrics" : {
            "$ref" : "#/components/schemas/AnalyticsResponse_data_inner_metrics"
          }
        },
        "type" : "object"
      },
      "Carrier_lanes_inner" : {
        "properties" : {
          "origin" : {
            "example" : "New York, NY",
            "type" : "string"
          },
          "destination" : {
            "example" : "Chicago, IL",
            "type" : "string"
          },
          "avgRate" : {
            "example" : "1234",
            "type" : "string"
          },
          "totalBids" : {
            "example" : 1,
            "type" : "number"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "auth" : {
        "description" : "An authentication token that identifies the organization associated with the event. You can reach out to FleetWorks team to request a token.",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}